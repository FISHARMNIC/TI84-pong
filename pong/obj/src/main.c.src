	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_draw
_draw:
	ld	hl, 1
	push	hl
	call	_gfx_Blit
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_clear
_clear:
	jp	_gfx_ZeroScreen
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_clearBuff
_clearBuff:
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, -16
	push	hl
	ld	hl, 320
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_gfx_FillRectangle_NoClip
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 7
	push	hl
	call	_gfx_SetColor
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_checkKeys
_checkKeys:
	call	_kb_Scan
	ld	bc, -3
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	5, a
	push	bc
	pop	de
	jq	nz, BB3_2
	ld	hl, -720876
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 0
	call	__setflag
	ld	de, 3
	jq	p, BB3_3
BB3_2:
	ld	hl, (_paddleLeftY)
	add	hl, de
	ld	(_paddleLeftY), hl
BB3_3:
	ld	iy, -720866
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	bit	3, a
	jq	nz, BB3_5
	ld.sis	bc, 1
	ld	l, (iy)
	ld	h, (iy + 1)
	call	__sand
	ld	e, 1
	ld	a, l
	xor	a, e
	bit	0, a
	ld	hl, 3
	push	hl
	pop	bc
	jq	nz, BB3_6
BB3_5:
	ld	hl, (_paddleRightY)
	add	hl, bc
	ld	(_paddleRightY), hl
BB3_6:
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_checkScores
_checkScores:
	ld	iy, 0
	ld	hl, (_leftScore)
	ld	de, (_rightScore)
	ld	bc, 10
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	p, BB4_2
	ex	de, hl
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	m, BB4_3
BB4_2:
	ld	(_leftScore), iy
	ld	(_rightScore), iy
BB4_3:
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_paddleLeft
_paddleLeft:
	ld	iy, 0
	ld	de, (_paddleLeftY)
	ld	bc, (_paddleWidth)
	ld	hl, (_paddleHeight)
	push	hl
	push	bc
	push	de
	push	iy
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_paddleRight
_paddleRight:
	ld	hl, 320
	ld	de, (_paddleWidth)
	or	a, a
	sbc	hl, de
	ld	iy, (_paddleRightY)
	ld	bc, (_paddleHeight)
	push	bc
	push	de
	push	iy
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_resetBall
_resetBall:
	ld	hl, 160
	ld	de, 120
	ld	bc, 1
	ld	(_ballX), hl
	ld	(_ballY), de
	ld	(_ballRise), bc
	ld	(_ballRun), bc
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_calculateReflection
_calculateReflection:
	ld	hl, -3
	call	__frameset
	ld	bc, 4
	ld	de, (_paddleLeftY)
	ld	iy, (_paddleHeight)
	lea	hl, iy
	add	hl, de
	ld	de, (_ballY)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	ld	(_reflection), de
	lea	hl, iy
	call	__idivs
	push	hl
	pop	bc
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB8_1
	ld	(ix - 3), bc
	lea	hl, iy
	ld	bc, 2
	call	__idivs
	push	hl
	pop	iy
	or	a, a
	sbc	hl, de
	call	__setflag
	ld	hl, 1
	push	hl
	pop	bc
	jq	p, BB8_7
	ld	bc, (ix - 3)
	add	iy, bc
	lea	hl, iy
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	m, BB8_4
	ld	hl, -1
	jq	BB8_6
BB8_1:
	ld	bc, 1
	ld	hl, 2
	jq	BB8_7
BB8_4:
	ld	hl, -2
BB8_6:
	ld	bc, 1
BB8_7:
	ld	(_ballRise), hl
	ld	de, (_ballRun)
	push	de
	pop	hl
	call	__inot
	ld	(ix - 3), hl
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	push	hl
	pop	bc
	ld	iy, 0
	ex	de, hl
	lea	de, iy
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	m, BB8_9
	ld	bc, (ix - 3)
BB8_9:
	ld	(_ballRun), bc
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_ball
_ball:
	ld	hl, -6
	call	__frameset
	ld	de, (_ballRun)
	ld	iy, (_ballX)
	add	iy, de
	ld	(_ballX), iy
	ld	de, (_ballRise)
	ld	hl, (_ballY)
	add	hl, de
	ld	(_ballY), hl
	ld	de, (_ballSize)
	push	de
	push	de
	push	hl
	push	iy
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, (_ballY)
	ld	de, 1
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	m, BB9_2
	ld	hl, (_ballSize)
	add	hl, bc
	ld	de, 240
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	m, BB9_3
BB9_2:
	ld	de, (_ballRise)
	or	a, a
	sbc	hl, hl
	or	a, a
	sbc	hl, de
	ld	(_ballRise), hl
BB9_3:
	ld	(ix - 6), bc
	ld	de, (_ballX)
	ld	bc, (_paddleWidth)
	ld	hl, (_ballSize)
	ld	(ix - 3), hl
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB9_4
	ld	hl, 320
	ld	iy, (ix - 3)
	add	iy, de
	or	a, a
	sbc	hl, bc
	push	hl
	pop	de
	lea	hl, iy
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	m, BB9_13
	ld	bc, (ix - 6)
	ld	hl, (ix - 3)
	add	hl, bc
	ld	de, (_paddleRightY)
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	m, BB9_11
	ld	hl, (_paddleHeight)
	add	hl, de
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	p, BB9_6
BB9_11:
	ld	hl, (_leftScore)
	inc	hl
	ld	(_leftScore), hl
	jq	BB9_12
BB9_4:
	ld	bc, (ix - 6)
	ld	hl, (ix - 3)
	add	hl, bc
	ld	de, (_paddleLeftY)
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	m, BB9_7
	ld	hl, (_paddleHeight)
	add	hl, de
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	p, BB9_6
BB9_7:
	ld	hl, (_rightScore)
	inc	hl
	ld	(_rightScore), hl
BB9_12:
	call	_checkScores
	ld	hl, 160
	ld	(_ballX), hl
	ld	hl, 120
	ld	(_ballY), hl
	ld	hl, 1
	ld	(_ballRise), hl
	ld	(_ballRun), hl
	jq	BB9_13
BB9_6:
	call	_calculateReflection
BB9_13:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_text
_text:
	ld	hl, (_leftScore)
	ld	de, (_rightScore)
	ld	bc, 10
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	p, BB10_3
	ex	de, hl
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	p, BB10_3
	ld	hl, 140
	ld	de, 20
	push	de
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, (_leftScore)
	ld	de, 1
	push	de
	push	hl
	call	_gfx_PrintInt
	pop	hl
	pop	hl
	ld	hl, 20
	push	hl
	ld	hl, 160
	push	hl
	ld	hl, L_.str
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 20
	push	hl
	ld	hl, 180
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, (_rightScore)
	ld	de, 1
	push	de
	push	hl
	call	_gfx_PrintInt
	pop	hl
	pop	hl
BB10_3:
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_renderLoop
_renderLoop:
	call	_checkKeys
	call	_clearBuff
	call	_paddleLeft
	call	_paddleRight
	call	_ball
	call	_text
	jp	_draw
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_gameInit
_gameInit:
	call	_gfx_ZeroScreen
BB12_1:
	call	_renderLoop
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	6, a
	jq	nz, BB12_3
	ld	hl, (_gameOver)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB12_1
BB12_3:
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	call	_gfx_Begin
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	ld	hl, 7
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 2
	push	hl
	push	hl
	call	_gfx_SetTextScale
	pop	hl
	pop	hl
	ld	hl, 7
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	call	_gameInit
	call	_gfx_End
	or	a, a
	sbc	hl, hl
	ret
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	public	_halfHeight
_halfHeight:
	dl	120

	section	.rodata,"a",@progbits
	public	_quarterHeight
_quarterHeight:
	dl	60

	section	.rodata,"a",@progbits
	public	_halfWidth
_halfWidth:
	dl	160

	section	.data,"aw",@progbits
	public	_paddleLeftY
_paddleLeftY:
	dl	60

	section	.data,"aw",@progbits
	public	_paddleRightY
_paddleRightY:
	dl	60

	section	.data,"aw",@progbits
	public	_paddleHeight
_paddleHeight:
	dl	60

	section	.data,"aw",@progbits
	public	_paddleWidth
_paddleWidth:
	dl	5

	section	.data,"aw",@progbits
	public	_ballX
_ballX:
	dl	160

	section	.data,"aw",@progbits
	public	_ballY
_ballY:
	dl	120

	section	.data,"aw",@progbits
	public	_ballRise
_ballRise:
	dl	1

	section	.data,"aw",@progbits
	public	_ballRun
_ballRun:
	dl	1

	section	.data,"aw",@progbits
	public	_ballSize
_ballSize:
	dl	10

	section	.bss,"aw",@nobits
	public	_didTouch
_didTouch:
	rb	3

	section	.bss,"aw",@nobits
	public	_leftScore
_leftScore:
	rb	3

	section	.bss,"aw",@nobits
	public	_rightScore
_rightScore:
	rb	3

	section	.bss,"aw",@nobits
	public	_gameOver
_gameOver:
	rb	3

	section	.bss,"aw",@nobits
	public	_reflection
_reflection:
	rb	3

	section	.rodata,"a",@progbits
	private	L_.str
L_.str:
	db	"|", 0

	ident	"clang version 14.0.0 (https://github.com/jacobly0/llvm-project a139def90d26173f771eb1eca797633d1fbb2797)"
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	__inot
	extern	_gfx_SetTextFGColor
	extern	_gfx_FillRectangle_NoClip
	extern	_gfx_Begin
	extern	_kb_Scan
	extern	__sand
	extern	_gfx_PrintInt
	extern	__idivs
	extern	_gfx_SetDraw
	extern	__setflag
	extern	__Unwind_SjLj_Unregister
	extern	_gfx_Blit
	extern	_gfx_FillRectangle
	extern	_gfx_ZeroScreen
	extern	_gfx_SetColor
	extern	_gfx_PrintStringXY
	extern	_gfx_End
	extern	_gfx_SetTextXY
	extern	_gfx_SetTextScale
